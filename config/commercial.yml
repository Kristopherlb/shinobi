defaults:
  logging:
    enabled: true
    retention_days: 365
  monitoring:
    enabled: true
    alarms:
      enabled: true
  security:
    encryption:
      enabled: true
    access_control:
      least_privilege: true
  waf-web-acl:
    scope: REGIONAL
    defaultAction: allow
    managedRuleGroups:
      - name: AWSManagedRulesCommonRuleSet
        vendorName: AWS
        priority: 1
        overrideAction: none
      - name: AWSManagedRulesKnownBadInputsRuleSet
        vendorName: AWS
        priority: 2
        overrideAction: none
    logging:
      enabled: true
      logDestinationType: cloudwatch
    monitoring:
      enabled: true
      alarms:
        blockedRequestsThreshold: 1000

  vpc:
    cidr: 10.0.0.0/16
    maxAzs: 2
    natGateways: 1
    flowLogsEnabled: true
    flowLogRetentionDays: 30
    vpcEndpoints:
      s3: true
      dynamodb: true
      secretsManager: false
      kms: false
    subnets:
      public:
        cidrMask: 24
      private:
        cidrMask: 24
      database:
        cidrMask: 28

  api-gateway-http:
    cors:
      allowOrigins: []
      allowHeaders:
        ["Content-Type", "Authorization", "X-Requested-With", "X-CSRF-Token"]
      allowMethods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
      allowCredentials: false
      maxAge: 86400
    throttling:
      rateLimit: 1000
      burstLimit: 2000
    accessLogging:
      enabled: true
      retentionInDays: 90
      includeExecutionData: false
      includeRequestResponseData: false
    monitoring:
      detailedMetrics: true
      tracingEnabled: true
      alarms:
        errorRate4xx: 5.0
        errorRate5xx: 1.0
        highLatency: 5000
        lowThroughput: 10
    security:
      enableWaf: false
      enableApiKey: false
      requireAuthorization: true

  api-gateway-rest:
    disableExecuteApiEndpoint: false
    throttling:
      rateLimit: 1000
      burstLimit: 2000
    logging:
      accessLoggingEnabled: true
      retentionInDays: 90
      executionLoggingLevel: INFO
      dataTraceEnabled: false
      metricsEnabled: true
    monitoring:
      detailedMetrics: true
      tracingEnabled: true
      thresholds:
        errorRate4xxPercent: 5
        errorRate5xxPercent: 1
        highLatencyMs: 2000
        lowThroughput: 10
    tracing:
      xrayEnabled: true

  s3-bucket:
    public: false
    versioning: true
    eventBridgeEnabled: false
    encryption:
      type: AES256
    security:
      blockPublicAccess: true
      requireSecureTransport: true
      requireMfaDelete: false
      denyDeleteActions: false
      tools:
        clamavScan: false
    lifecycleRules: []
    compliance:
      auditLogging: false
      objectLock:
        enabled: false
    monitoring:
      enabled: false
      clientErrorThreshold: 10
      serverErrorThreshold: 1

  secrets-manager:
    automaticRotation:
      enabled: false
      rotationLambda:
        createFunction: false
        enableTracing: false
      schedule:
        automaticallyAfterDays: 365
    encryption:
      createCustomerManagedKey: false
      enableKeyRotation: false
    recovery:
      deletionProtection: false
      recoveryWindowInDays: 30
    replicas: []
    monitoring:
      enabled: false
      rotationFailureThreshold: 1
      unusualAccessThresholdMs: 5000
    accessPolicies:
      denyInsecureTransport: true
      restrictToVpce: false
      allowedVpceIds: []
      requireTemporaryCredentials: false

  iam-policy:
    controls:
      denyInsecureTransport: false
      requireMfaForActions: []
      additionalStatements: []
    logging:
      usage:
        enabled: true
        retentionInDays: 90
        removalPolicy: destroy
        tags:
          log-type: policy-usage
          retention: 90-days
    monitoring:
      enabled: false
      detailedMetrics: false
      usageAlarm:
        enabled: false

  cloudfront-distribution:
    origin:
      type: s3
    defaultBehavior:
      viewerProtocolPolicy: allow-all
      allowedMethods: ["GET", "HEAD"]
      cachedMethods: ["GET", "HEAD"]
      compress: true
    additionalBehaviors: []
    priceClass: PriceClass_100
    geoRestriction:
      type: none
      countries: []
    logging:
      enabled: false
      includeCookies: false
    monitoring:
      enabled: false
      alarms:
        error4xx:
          enabled: false
        error5xx:
          enabled: false
        originLatencyMs:
          enabled: false
    hardeningProfile: baseline

  rds-postgres:
    instance:
      engineVersion: '15.4'
      instanceType: t3.micro
      allocatedStorage: 20
      multiAz: false
      deletionProtection: false
      publiclyAccessible: false
      removalPolicy: destroy
    encryption:
      enabled: false
      customerManagedKey:
        create: false
        enableRotation: false
    backup:
      retentionDays: 7
      copyTagsToSnapshots: true
    monitoring:
      enhancedMonitoring:
        enabled: false
        intervalSeconds: 60
      performanceInsights:
        enabled: false
        retentionDays: 7
        useCustomerManagedKey: false
      alarms:
        cpuUtilization:
          enabled: false
        freeStorageSpaceBytes:
          enabled: false
        databaseConnections:
          enabled: false
    logging:
      database:
        enabled: false
        retentionInDays: 90
        removalPolicy: destroy
      audit:
        enabled: false
        retentionInDays: 365
        removalPolicy: retain
    rotation:
      enabled: false
      mode: single-user
      scheduleInDays: 30
    security:
      iamAuthentication: false
      enforceSsl: true
    networking:
      useDefaultVpc: true
      ingressCidrs:
        - 10.0.0.0/16
      port: 5432
    observability:
      logExports:
        - postgresql
    hardeningProfile: baseline

version: 1
name: NinjaOne Platform Testing — Audit Rules (PTS-1.0)
owner: platform-engineering
last_updated: 2025-09-14

# Common test file scopes (adjust to repo layout)
defaults:
  test_globs:
    - "packages/**/tests/**/*.{ts,tsx,js,jsx}"
    - "**/?(*.)+(spec|test).[tj]s?(x)"
    - "tests/**/*.py"
    - "**/*_test.go"
  meta_sidecar_suffixes: [".meta.json", ".meta.yaml", ".meta.yml"]

rules:

  # ─────────────────────────────────────────
  # 0) Document control (lightweight presence)
  # ─────────────────────────────────────────
  - id: PTS-000
    title: Testing standard file present
    severity: warn
    scope_glob: .
    must_exist:
      - standards/platform-testing-standard.md
    message: "Include the canonical PTS doc in-repo (standards/platform-testing-standard.md)."

  # ─────────────────────────────────────────
  # 11) Test Metadata — REQUIRED
  # ─────────────────────────────────────────
  - id: PTS-101
    title: Each test file has adjacent metadata sidecar
    severity: error
    scope_glob: ${defaults.test_globs}
    # Assertion: for each test file, a sidecar with same basename and one of the suffixes must exist
    sidecar_required:
      suffixes: ${defaults.meta_sidecar_suffixes}
    message: "Every test must have adjacent metadata: *.meta.(json|yaml|yml)."

  - id: PTS-102
    title: Metadata has required fields
    severity: error
    scope_glob: "**/*.meta.{json,yaml,yml}"
    must_match:
      - pattern: '"id"\\s*:\\s*"[A-Za-z0-9-]+-[A-Za-z0-9-]+-\\d{3}"'     # TP-<service>-<feature>-NNN
      - pattern: '"level"\\s*:\\s*"(unit|integration|e2e)"'
      - pattern: '"capability"\\s*:\\s*".+?"'
      - pattern: '"oracle"\\s*:\\s*"(exact|snapshot|property|contract|metamorphic|trace)"'
      - pattern: '"invariants"\\s*:\\s*\\['
      - pattern: '"fixtures"\\s*:\\s*\\['
      - pattern: '"inputs"\\s*:\\s*\\{'
      - pattern: '"risks"\\s*:\\s*\\['
      - pattern: '"dependencies"\\s*:\\s*\\['
      - pattern: '"evidence"\\s*:\\s*\\['
      - pattern: '"compliance_refs"\\s*:\\s*\\['
      - pattern: '"ai_generated"\\s*:\\s*(true|false)'
      - pattern: '"human_reviewed_by"\\s*:\\s*".*"'
    message: "Metadata is missing required fields per §11."

  - id: PTS-103
    title: AI-authored tests require human reviewer
    severity: error
    scope_glob: "**/*.meta.{json,yaml,yml}"
    must_match:
      - pattern: '"ai_generated"\\s*:\\s*true'
        implies:
          - pattern: '"human_reviewed_by"\\s*:\\s*".+?"'
    message: "ai_generated=true requires non-empty human_reviewed_by."

  - id: PTS-104
    title: Snapshot oracle requires mask_rules
    severity: error
    scope_glob: "**/*.meta.{json,yaml,yml}"
    must_match:
      - pattern: '"oracle"\\s*:\\s*"snapshot"'
        implies:
          - pattern: '"mask_rules"\\s*:\\s*\\[.+\\]'
    message: "Snapshot tests MUST declare mask_rules (see §13)."

  - id: PTS-105
    title: ID format TP-<service>-<feature>-NNN
    severity: error
    scope_glob: "**/*.meta.{json,yaml,yml}"
    must_match:
      - pattern: '"id"\\s*:\\s*"TP-[a-z0-9-]+-[a-z0-9-]+-\\d{3}"'
    message: "IDs must follow TP-<service>-<feature>-NNN with zero-padded NNN."

  # ─────────────────────────────────────────
  # 12) Naming convention
  # ─────────────────────────────────────────
  - id: PTS-201
    title: Test titles follow Feature__Condition__ExpectedOutcome (JS/TS)
    severity: warn
    scope_glob: "**/?(*.)+(spec|test).[tj]s?(x)"
    must_match_any:
      - pattern: '\\b(it|test|describe)\\s*\\(\\s*["\']\\w+__[^_]+__[^_]+["\']'
    message: "Name tests as Feature__Condition__ExpectedOutcome (heuristic)."

  - id: PTS-202
    title: Test filenames follow Feature__Condition__ExpectedOutcome (all langs)
    severity: warn
    scope_glob: ${defaults.test_globs}
    filename_must_match: '^[A-Za-z0-9]+__[^_]+__[^_]+\\.(spec|test)\\.[tj]s(x)?$|^[A-Za-z0-9]+__[^_]+__[^_]+_test\\.go$|^[A-Za-z0-9]+__[^_]+__[^_]+\\.py$'
    message: "Prefer filenames shaped like Feature__Condition__ExpectedOutcome.* (heuristic)."

  # ─────────────────────────────────────────
  # 4/6) Determinism (clock/RNG/I/O)
  # ─────────────────────────────────────────
  - id: PTS-301
    title: Deterministic clock used (JS/TS)
    severity: warn
    scope_glob: "**/?(*.)+(spec|test).[tj]s?(x)"
    must_match_any:
      - pattern: 'jest\\.(useFakeTimers|setSystemTime)\\('
      - pattern: 'vi\\.(useFakeTimers|setSystemTime)\\('
      - pattern: 'sinon\\.(useFakeTimers)\\('
      - pattern: 'MockDate\\.set\\('
    message: "Freeze/inject the clock for deterministic tests."

  - id: PTS-302
    title: Deterministic clock used (Python)
    severity: warn
    scope_glob: "tests/**/*.py"
    must_match_any:
      - pattern: 'freezegun\\.freeze_time\\('
      - pattern: '@freeze_time\\('
      - pattern: 'time_machine\\.travel\\('
    message: "Use freezegun/time_machine (or equivalent) to freeze time."

  - id: PTS-303
    title: RNG seeding present (JS/TS)
    severity: warn
    scope_glob: "**/?(*.)+(spec|test).[tj]s?(x)"
    must_match_any:
      - pattern: 'seedrandom\\('
      - pattern: 'fc\\.configure(Global)?\\(\\s*\\{[^}]*seed\\s*:'
      - pattern: 'Math\\.random\\s*=\\s*'
    message: "Seed RNG for reproducibility; print seed on failure."

  - id: PTS-304
    title: RNG seeding present (Python)
    severity: warn
    scope_glob: "tests/**/*.py"
    must_match_any:
      - pattern: '\\brandom\\.seed\\('
      - pattern: '\\bnp\\.random\\.seed\\('
      - pattern: 'hypothesis\\.settings\\(.*(seed|deadline|max_examples)'
    message: "Seed RNG (random/numpy) or configure Hypothesis."

  - id: PTS-305
    title: Network access disallowed unless explicitly allowed (heuristic)
    severity: warn
    scope_glob: ${defaults.test_globs}
    must_not_match:
      - pattern: 'https?://'
      - pattern: '\\b(fetch|axios|superagent|urllib|requests|get|post)\\('
    allow_if_metadata_includes:
      key: fixtures
      any: ["net:allow", "live_integration"]
    message: "No live network in tests unless fixture opts-in (net:allow/live_integration)."

  # ─────────────────────────────────────────
  # 5) Oracles — single primary
  # ─────────────────────────────────────────
  - id: PTS-401
    title: Do not mix primary oracles in a single file (heuristic)
    severity: warn
    scope_glob: ${defaults.test_globs}
    must_not_match_combo:
      - ['toMatchSnapshot\\(', '(ajv|zod|yup)\\.(validate|safeParse)\\(']   # snapshot + contract
      - ['toMatchSnapshot\\(', '\\b(fc|fast-check)\\b']                     # snapshot + property
      - ['\\b(fc|fast-check)\\b', '(ajv|zod|yup)\\.(validate|safeParse)\\(']# property + contract
    message: "Keep one primary oracle per test case; mixing in same file is a smell."

  - id: PTS-402
    title: Snapshot tests should use stable serializers/masks
    severity: warn
    scope_glob: ${defaults.test_globs}
    must_match_any:
      - pattern: 'toMatchSnapshot\\('
        implies:
          - pattern: '(mask|redact|sanitize)\\w*\\('
    message: "Apply masks/sanitizers before snapshotting (or via custom serializer)."

  # ─────────────────────────────────────────
  # 7/9) Assertions & internals
  # ─────────────────────────────────────────
  - id: PTS-501
    title: Prefer contract assertions (avoid internals/private) — heuristic
    severity: warn
    scope_glob: "**/?(*.)+(spec|test).[tj]s?(x)"
    must_not_match:
      - pattern: '\\bexpect\\([^)]*\\._[A-Za-z]\\w*\\)'      # private-ish JS
      - pattern: '\\bexpect\\([^)]*\\.__[A-Za-z]\\w*\\)'     # double-underscore
    message: "Avoid asserting private/internal fields; stick to public contract."

  - id: PTS-502
    title: Failure messages should be actionable (avoid truthy/falsy spam)
    severity: warn
    scope_glob: ${defaults.test_globs}
    must_not_match:
      - pattern: '\\.to(BeTruthy|BeFalsy)\\('
    message: "Prefer specific equality/schema assertions over truthy/falsy."

  # ─────────────────────────────────────────
  # 8) Input design & negatives
  # ─────────────────────────────────────────
  - id: PTS-601
    title: Negative/adversarial cases present (heuristic)
    severity: warn
    scope_glob: ${defaults.test_globs}
    must_match_any:
      - pattern: '\\bshould\\s+(reject|fail|error|throw)\\b'
      - pattern: '\\b(it|test)\\([^)]*(invalid|malformed|unauthorized|timeout|retry|idempotent)[^)]*\\)'
    message: "Include invalid/adversarial inputs and fault cases."

  # ─────────────────────────────────────────
  # 10) Coverage & mutation artifacts (pipeline-level)
  # ─────────────────────────────────────────
  - id: PTS-701
    title: Coverage summary present (CI artifact)
    severity: warn
    scope_glob: .
    must_exist_any:
      - coverage/coverage-summary.json       # Jest
      - coverage.xml                         # PyTest/coverage.py (XML)
      - coverage/coverage.out                # Go (text)
    message: "Publish coverage artifacts to CI. Target ~80% branch/condition per §10."

  - id: PTS-702
    title: Mutation report present (optional)
    severity: info
    scope_glob: .
    must_exist_any:
      - reports/mutation/mutation.json
      - reports/mutation/index.html
    message: "Mutation testing report detected. (Recommended; no numeric gate.)"

  # ─────────────────────────────────────────
  # 12/13/14/15) Conformance links, evidence, snapshots
  # ─────────────────────────────────────────
  - id: PTS-801
    title: Conformance references included when relevant
    severity: warn
    scope_glob: "**/*.meta.{json,yaml,yml}"
    must_match_any:
      - pattern: '"compliance_refs"\\s*:\\s*\\[(\\s*".+?"\\s*(,\\s*".+?")*)?\\]'
    message: "Link relevant conformance packs in compliance_refs when tests validate them."

  - id: PTS-802
    title: Evidence URIs present for integration/E2E
    severity: warn
    scope_glob: "**/*.meta.{json,yaml,yml}"
    must_match:
      - pattern: '"level"\\s*:\\s*"(integration|e2e)"'
        implies:
          - pattern: '"evidence"\\s*:\\s*\\[\\s*".+?"'
    message: "Integration/E2E should attach at least one evidence URI (logs, junit, artifacts)."

  - id: PTS-803
    title: Snapshot changes require intentional regeneration (process hint)
    severity: info
    scope_glob: .
    diff_checks:
      changed_files_match_any:
        - "__snapshots__/"
        - ".snap"
    # Note: hook this to your commit checker or PR template if you want hard failure.
    message: "Snapshots changed in this PR. Ensure rationale is included in the commit/PR per §13."

mappings:
  "Metadata": ["PTS-101","PTS-102","PTS-103","PTS-104","PTS-105"]
  "Naming": ["PTS-201","PTS-202"]
  "Determinism": ["PTS-301","PTS-302","PTS-303","PTS-304","PTS-305"]
  "Oracles": ["PTS-401","PTS-402"]
  "Assertions": ["PTS-501","PTS-502"]
  "Negatives": ["PTS-601"]
  "Coverage": ["PTS-701","PTS-702"]
  "Conformance/Evidence": ["PTS-801","PTS-802","PTS-803"]

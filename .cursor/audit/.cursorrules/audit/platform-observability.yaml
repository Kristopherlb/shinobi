Absolutely—here’s a **Cursor‑style audit rules file** for the **NinjaOne OpenTelemetry Standard (v1.0)**. Drop it in your repo as:

`cursor/audit/platform-observability.yaml`

It matches the same runner semantics we used earlier (e.g., `must_exist`, `must_match`, `must_not_match`, `conditional.requires_pattern`, `count`, `diff_checks`, etc.).

---

```yaml
version: 1
name: NinjaOne Platform Observability — Audit Rules (OTel v1.0)
owner: platform-engineering
last_updated: 2025-09-14

# NOTE: Comma-separated globs are supported by the runner I provided.
# Adjust globs to your repo layout if needed.

rules:

  # ─────────────────────────────────────────
  # 1) App instrumentation (use OTel, not vendor SDKs)
  # ─────────────────────────────────────────

  - id: OTL-001
    title: OpenTelemetry SDK present in app code (heuristic)
    severity: warn
    scope_glob: "packages/**/src/**/*.{ts,tsx,js,jsx},src/**/*.{ts,tsx,js,jsx},**/*.py,**/*.go,java/**/src/**/*.java"
    must_match_any:
      - pattern: '@opentelemetry/'
      - pattern: 'opentelemetry\\.(sdk|instrument|api)'
      - pattern: 'import\\s+{\\s*OpenTelemetry|TracerProvider'
    message: "Apps should use OTel SDK/auto-instrumentations, not vendor agents."

  - id: OTL-002
    title: Forbid direct vendor tracing agents in app code
    severity: error
    scope_glob: "packages/**/src/**/*.{ts,tsx,js,jsx},src/**/*.{ts,tsx,js,jsx}"
    must_not_match:
      - pattern: "from\\s+['\"]dd-trace['\"]|require\\(['\"]dd-trace['\"]\\)"
      - pattern: "from\\s+['\"]newrelic['\"]|require\\(['\"]newrelic['\"]\\)"
      - pattern: "from\\s+['\"]elastic-apm-node['\"]|require\\(['\"]elastic-apm-node['\"]\\)"
      - pattern: "from\\s+['\"]opentracing['\"]|from\\s+['\"]jaeger-client['\"]"
    message: "Use OpenTelemetry; direct vendor agents are disallowed."

  - id: OTL-003
    title: Discourage direct AWS X-Ray SDK (prefer OTel bridge)
    severity: warn
    scope_glob: "packages/**/src/**/*.{ts,tsx,js,jsx},src/**/*.{ts,tsx,js,jsx}"
    must_not_match:
      - pattern: "from\\s+['\"]aws-xray-sdk(-core)?['\"]|require\\(['\"]aws-xray-sdk"
    message: "Prefer OTel + ADOT/X-Ray bridge instead of direct X-Ray SDK."

  # ─────────────────────────────────────────
  # 2) Required environment/config for apps
  # ─────────────────────────────────────────

  - id: OTL-101
    title: Required OTel env/config present
    severity: error
    scope_glob: "**/service.yml,**/*.env,deploy/**/*.yaml,k8s/**/*.yaml"
    must_match_any:
      - pattern: "OTEL_EXPORTER_OTLP_ENDPOINT\\s*[:=]\\s*https?://"
      - pattern: "OTEL_EXPORTER_OTLP_PROTOCOL\\s*[:=]\\s*(grpc|http)"
      - pattern: "OTEL_SERVICE_NAME\\s*[:=]\\s*[A-Za-z0-9._-]+"
      - pattern: "OTEL_RESOURCE_ATTRIBUTES\\s*[:=].*(service\\.version|service\\.namespace|deployment\\.environment)"
      - pattern: "OTEL_PROPAGATORS\\s*[:=].*(tracecontext).*\\b(baggage)\\b"
    message: "Apps must set endpoint, protocol, service name, resource attributes, and propagators."

  - id: OTL-102
    title: Head sampler configured (parentbased_traceidratio) with arg
    severity: warn
    scope_glob: "**/service.yml,**/*.env,deploy/**/*.yaml,k8s/**/*.yaml"
    must_match:
      - pattern: "OTEL_TRACES_SAMPLER\\s*[:=]\\s*parentbased_traceidratio"
    must_match_any:
      - pattern: "OTEL_TRACES_SAMPLER_ARG\\s*[:=]\\s*(0(\\.\\d+)?|1(\\.0+)?)"
    message: "Set head sampler + arg; tail sampling is enforced in collector."

  - id: OTL-103
    title: HTTP semconv dual-emission during migration
    severity: warn
    scope_glob: "**/service.yml,**/*.env,deploy/**/*.yaml,k8s/**/*.yaml"
    must_match_any:
      - pattern: "OTEL_SEMCONV_STABILITY_OPT_IN\\s*[:=]\\s*http/dup"
    message: "Use http/dup until dashboards are migrated to stabilized semconv."

  - id: OTL-104
    title: No PII/secret keys in OTEL_RESOURCE_ATTRIBUTES
    severity: error
    scope_glob: "**/service.yml,**/*.env"
    must_not_match:
      - pattern: "OTEL_RESOURCE_ATTRIBUTES\\s*[:=].*(email|password|token|authorization|apikey|secret)"
    message: "Never include PII or secrets in resource attributes."

  # ─────────────────────────────────────────
  # 3) Collector presence & core pipeline
  # ─────────────────────────────────────────

  - id: OTL-201
    title: Collector config present
    severity: error
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_exist:
      - "."
    message: "An OpenTelemetry Collector configuration must exist in the repo."

  - id: OTL-202
    title: Collector has OTLP receivers (grpc + http)
    severity: error
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_match:
      - pattern: "receivers:\\s*\\n\\s*otlp:\\s*\\n(.*\\n)*?grpc:\\s*\\{?\\}?\\n(.*\\n)*?http:\\s*\\{?\\}?"
    message: "Collector must accept OTLP over gRPC and HTTP."

  - id: OTL-203
    title: memory_limiter and batch processors present
    severity: error
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_match:
      - pattern: "processors:\\s*(.*\\n)*?memory_limiter:"
      - pattern: "processors:\\s*(.*\\n)*?batch:"
    message: "Collector must include memory_limiter and batch processors."

  - id: OTL-204
    title: Tail sampling enforces errors + latency + baseline ratio
    severity: error
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_match:
      - pattern: "tailsampling:"
      - pattern: "type:\\s*status_code"
      - pattern: "type:\\s*latency"
      - pattern: "type:\\s*probabilistic"
    message: "Collector must tail-sample: 100% errors, elevate slow traces, probabilistic baseline."

  - id: OTL-205
    title: Grafana stack exporters wired (Tempo/Loki/Mimir) — heuristic
    severity: warn
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_match_any:
      - pattern: "exporters:\\s*(.*\\n)*?otlphttp/tempo:"
      - pattern: "endpoint:\\s*https?://[^\\n]*tempo"
    must_match_any_2:
      - pattern: "exporters:\\s*(.*\\n)*?otlphttp/loki:"
      - pattern: "endpoint:\\s*https?://[^\\n]*loki.*otlp"
    must_match_any_3:
      - pattern: "exporters:\\s*(.*\\n)*?prometheusremotewrite"
      - pattern: "endpoint:\\s*https?://[^\\n]*mimir/.*/api/v1/push"
    message: "Prefer OTLP→Tempo (traces), OTLPHTTP→Loki (logs), remote_write→Mimir (metrics)."

  - id: OTL-206
    title: Logs pipeline exists and uses OTLP receivers
    severity: error
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_match:
      - pattern: "service:\\s*\\n\\s*pipelines:\\s*\\n(.*\\n)*?logs:\\s*\\n\\s*receivers:\\s*\\[.*otlp.*\\]"
    message: "Logs pipeline must accept OTLP logs."

  - id: OTL-207
    title: Metrics pipeline exists and uses OTLP receivers
    severity: error
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_match:
      - pattern: "service:\\s*\\n\\s*pipelines:\\s*\\n(.*\\n)*?metrics:\\s*\\n\\s*receivers:\\s*\\[.*otlp.*\\]"
    message: "Metrics pipeline must accept OTLP metrics."

  # ─────────────────────────────────────────
  # 4) Security & transport
  # ─────────────────────────────────────────

  - id: OTL-301
    title: TLS/mTLS configured for collector endpoints; no insecure:true
    severity: error
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_not_match:
      - pattern: "insecure\\s*:\\s*true"
      - pattern: "insecure_skip_verify\\s*:\\s*true"
    must_match_any:
      - pattern: "tls:\\s*(.*\\n)*?(cert_file|client_ca_file|ca_file|key_file)"
      - pattern: "auth:\\s*\\n\\s*authenticator:"
    message: "Enable TLS/mTLS or authenticated transport; do not set insecure:true."

  - id: OTL-302
    title: Accept standard OTLP ports only
    severity: warn
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_match_any:
      - pattern: "4317"
      - pattern: "4318"
    message: "Use OTLP standard ports 4317 (gRPC) / 4318 (HTTP)."

  # ─────────────────────────────────────────
  # 5) Correlation, PII hygiene, vendor escapes
  # ─────────────────────────────────────────

  - id: OTL-401
    title: Logs include trace correlation fields (heuristic)
    severity: warn
    scope_glob: "packages/**/src/**/*.{ts,tsx,js,jsx},src/**/*.{ts,tsx,js,jsx},**/*.py,**/*.go"
    must_match_any:
      - pattern: "trace_id"
      - pattern: "span_id"
    message: "Request-scoped logs should carry trace_id/span_id for correlation."

  - id: OTL-402
    title: No direct Loki/Tempo client transports in app code (use OTel)
    severity: warn
    scope_glob: "packages/**/src/**/*.{ts,tsx,js,jsx},src/**/*.{ts,tsx,js,jsx}"
    must_not_match:
      - pattern: "winston-loki|pino-loki|loki-transport"
      - pattern: "tempo-client"
    message: "Export via OTel; avoid app-level Loki/Tempo transports."

  - id: OTL-403
    title: service.yml does not embed vendor tracing config
    severity: error
    scope_glob: "**/service.yml"
    must_not_match:
      - pattern: "dd-trace|newrelic|elastic-apm|jaeger"
    message: "Do not embed vendor-specific agents in service manifests."

  # ─────────────────────────────────────────
  # 6) Platform-specific hints (optional)
  # ─────────────────────────────────────────

  - id: OTL-501
    title: Lambda uses ADOT layer (heuristic)
    severity: warn
    scope_glob: "deploy/**/*.yaml,**/service.yml,packages/**/cdk/**/*.ts,packages/**/iac/**/*.ts"
    must_match_any:
      - pattern: "AWSLambda-OTel-"
      - pattern: "ADOT"
    message: "For Lambda, prefer ADOT Lambda layer + OTel Lambda collector."

  - id: OTL-502
    title: K8s uses OTel Operator/instrumentation (heuristic)
    severity: warn
    scope_glob: "k8s/**/*.yaml,deploy/**/*.yaml"
    must_match_any:
      - pattern: "opentelemetry\\.io/(instrumentation|collector)"
      - pattern: "instrumentation\\.opentelemetry\\.io"
    message: "Prefer OpenTelemetry Operator + auto-instrumentation for K8s workloads."

  # ─────────────────────────────────────────
  # 7) Collector guardrails & memory
  # ─────────────────────────────────────────

  - id: OTL-601
    title: memory_limiter has thresholds configured
    severity: warn
    scope_glob: "**/otel-collector*.y?(a)ml,**/otel/*.y?(a)ml,infra/**/otel*.y?(a)ml,observability/**/collector*.y?(a)ml"
    must_match_any:
      - pattern: "memory_limiter:\\s*(.*\\n)*?limit_percentage:\\s*\\d+"
      - pattern: "memory_limiter:\\s*(.*\\n)*?check_interval:\\s*\\d+(ms|s)"
    message: "Configure limit_percentage and check_interval on memory_limiter."

  - id: OTL-602
    title: GOMEMLIMIT set for collector containers (heuristic)
    severity: warn
    scope_glob: "k8s/**/*.yaml,deploy/**/*.yaml"
    must_match_any:
      - pattern: "name:\\s*GOMEMLIMIT"
      - pattern: "GOMEMLIMIT="
    message: "Set GOMEMLIMIT (~80% container memory) for collector pods."

mappings:
  "App Instrumentation": ["OTL-001","OTL-002","OTL-003"]
  "App Env/Config": ["OTL-101","OTL-102","OTL-103","OTL-104"]
  "Collector Core": ["OTL-201","OTL-202","OTL-203","OTL-204","OTL-205","OTL-206","OTL-207"]
  "Security/Transport": ["OTL-301","OTL-302"]
  "Correlation & Hygiene": ["OTL-401","OTL-402","OTL-403"]
  "Platform Hints": ["OTL-501","OTL-502"]
  "Guardrails": ["OTL-601","OTL-602"]
```

---

If you want, I can also **merge this into your existing runner** so `npm run audit:platform` can take a `--rules cursor/audit/platform-observability.yaml` flag—or we can make a composite that runs governance + testing + observability in one shot.

import { useState } from 'react';
import { Badge } from './Badge';
import { Timestamp } from './Timestamp';
import { TagList } from './TagList';
import { LinkList } from './LinkList';
import { Card, CardContent } from '@/components/ui/card';
import { cn } from '@/lib/utils';\n\ninterface Reference {\n  label: string;\n  url: string;\n}\n\ninterface FeedItem {\n  id: string;\n  timestamp: string;\n  type: string;\n  summary: string;\n  references: Reference[];\n  tags: string[];\n  severity?: 'low' | 'med' | 'high';\n  isUnread?: boolean;\n}\n\ninterface FeedItemProps {\n  item: FeedItem;\n  onMarkRead?: (id: string) => void;\n  className?: string;\n}\n\nconst severityVariants = {\n  low: 'info',\n  med: 'warn',\n  high: 'danger',\n} as const;\n\nexport function FeedItemComponent({ item, onMarkRead, className }: FeedItemProps) {\n  const [isRead, setIsRead] = useState(!item.isUnread);\n\n  const handleClick = () => {\n    if (!isRead) {\n      setIsRead(true);\n      onMarkRead?.(item.id);\n    }\n  };\n\n  return (\n    <Card\n      className={cn(\n        'hover-elevate cursor-pointer transition-all duration-200',\n        !isRead && 'border-primary/50',\n        className\n      )}\n      onClick={handleClick}\n      data-testid={`feed-item-${item.id}`}\n    >\n      <CardContent className=\"p-4\">\n        <div className=\"flex items-start justify-between gap-4 mb-3\">\n          <div className=\"flex items-center gap-2\">\n            <Badge variant=\"outline\" className=\"text-xs\">\n              {item.type}\n            </Badge>\n            {item.severity && (\n              <Badge variant={severityVariants[item.severity]} className=\"text-xs\">\n                {item.severity.toUpperCase()}\n              </Badge>\n            )}\n            {!isRead && (\n              <div className=\"w-2 h-2 bg-primary rounded-full\" />\n            )}\n          </div>\n          <Timestamp iso={item.timestamp} />\n        </div>\n        \n        <div className=\"space-y-3\">\n          <p className=\"text-foreground leading-relaxed\">\n            {item.summary}\n          </p>\n          \n          {item.tags.length > 0 && (\n            <TagList tags={item.tags} className=\"mt-2\" />\n          )}\n          \n          {item.references.length > 0 && (\n            <div className=\"pt-2 border-t border-border\">\n              <LinkList links={item.references} />\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}